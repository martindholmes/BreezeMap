<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://www.tei-c.org/release/xml/tei/custom/schema/relaxng/tei_odds.rng" type="application/xml"
	schematypens="http://purl.oclc.org/dsdl/schematron"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:tei="http://www.tei-c.org/ns/1.0">
  <teiHeader>
      <fileDesc>
         <titleStmt>
            <title>BreezeMap Project ODD</title>
           <author>Martin Holmes</author>
         </titleStmt>
         <publicationStmt>
           <publisher>Unviversity of Victoria Humanities Computing and Media Centre</publisher>
           <pubPlace>Victoria, BC, Canada</pubPlace>
           <availability>
             <licence target="https://opensource.org/licenses/MIT">All code will be hosted on GitHub and released under an MIT license.</licence>
             <licence target="http://creativecommons.org/licenses/by/4.0/">Documentation will be released under Creative Commons Attribution 4.0 International.</licence>
           </availability>
         </publicationStmt>
         <sourceDesc>
            <p>Born digital.</p>
         </sourceDesc>
      </fileDesc>
  </teiHeader>
  <text>
    
    <body>
      <head>The BreezeMap Project: Documentation</head>
      
      <div xml:id="intro">
        <head>Introduction</head>
        <p>The BreezeMap project is an attempt to provide a helpful interface layer between <ref target="http://www.tei-c.org/release/doc/tei-p5-doc/en/html/index.html">TEI</ref> XML-based gazetteer 
      or placeography projects (based on the TEI <gi>listPlace</gi> and <gi>place</gi> elements)
      and the <ref target="http://openlayers.org">OpenLayers</ref> mapping library. It also aims
      to provide a tool for markup of non-map static images, as a replacement for UVic's old 
        <ref target="https://hcmc.uvic.ca/~mholmes/image_markup/">Image Markup Tool</ref>.</p>
      
      <p>The basic idea is this:
      
      <list>
        <item>You create a new TEI placeography from a template.</item>
        <item>You configure an OpenLayers map HTML file based on a template.</item>
        <item>The BreezeMap project turns your placeography into GeoJSON, and builds a map 
        site for you.</item>
        <item>You can use the map site to draw new features, then transfer their coordinates
        back into the placeography file, to build your map.</item>
      </list>
      
      At the moment, considerable knowledge is required to be able to use the tool, because 
      we're still working on basic functionality and processing, and haven't yet started 
      work on tutorials, templates and other helpful components that will make the project
      really useful. 
      </p>
      </div>
      
      <div xml:id="gettingStarted">
        <head>Getting started</head>
        
        <p>You need two things to get started with BreezeMap:
          <list rend="numbered">
            <item>A TEI XML file which contains a <gi>listPlace</gi> element, within which each <gi>place</gi>
            has a <gi>location</gi> with <att>type</att>=<val>GeoJSON</val> and a child <gi>geo</gi> element
            containing a GeoJSON geometry.</item>
            <item>An HTML5 web page file which sets up and configures the BreezeMap OpenLayers-based map
            you will be using.</item>
          </list>
          You can create these files by starting from the templates which are in the <ident>templates</ident>
          folder in the BreezeMap repository. Make sure the TEI XML file validates against the two schemas 
          in the <ident>schemas</ident> folder (<ident>breezemap.rng</ident> and <ident>breezemap.sch</ident>)
          otherwise you may not get reliable output from the build process. Keep the two files together.
        </p>
      </div>
      
      <div xml:id="building">
        <head>Building a BreezeMap project</head>
        
        <p>To build a BreezeMap project, you will require:
        <list>
          <item>Java (a recent version)</item>
          <item><ref target="https://ant.apache.org/">Ant</ref> (a recent version)</item>
          <item><ref target="https://sourceforge.net/projects/ant-contrib/">ANT Contrib</ref></item>
        </list>
          First, clone the BreezeMap repository if you haven't done that already. To test your system,
          you can build the test site. Open a terminal in the root of the repository, and issue the 
          command <code>ant</code>. If the build runs and succeeds, you should see a new folder called
          <ident>testsite</ident> in the repo root folder. Inside there is a test website with three
          example map pages. You can test these pages by starting a little local webserver in that folder
          and then browsing to them, or you can upload the contents of the <ident>testsite</ident> folder
          to a web server and browse there.
        </p>
        
        <p>You can build your own project in exactly the same way. Imagine you have a TEI XML file called
        <ident>myMap.xml</ident> in a folder called <ident>data</ident> inside the BreezeMap repository structure.
        You can open a terminal in the root of the repository folder, then issue this command:
        
        <eg>ant -DinputXml=data/myMap.xml</eg>
          
          
          This will create an HTML site in the <ident>testsite</ident> folder, including JSON 
          generated from your XML, and all the JavaScript and CSS required. If your XML file is
          already accompanied by an HTML file which shares the same base name, then that will 
          be copied into the output folder; if not, then a new HTML file will be created based 
          on <ident>templates/BreezeMap.html</ident>, and that will be copied into the 
          <ident>testsite</ident> folder. You can then modify that file as you like, and copy 
          it back to the same folder as the source XML file so that your customized version 
          will be used in future.
          <!-- TODO: Add to build process the creation of an HTML file whose filename matches the TEI filename
               if there is no such a file. -->
        
        </p>
      </div>
      
    </body>
    
      <back><div>
         <schemaSpec ident="breezemap">
           <moduleRef key="core" include="date desc choice abbr expan foreign gloss graphic head item list note p ptr q ref relatedItem term title"/>
           <moduleRef key="header" include="availability catDesc catRef category classDecl encodingDesc fileDesc licence listPrefixDef prefixDef profileDesc projectDesc publicationStmt sourceDesc taxonomy teiHeader titleStmt"/>
           <moduleRef key="textstructure" include="TEI body div text"/>
           <moduleRef key="tei"/>
           <moduleRef key="namesdates" include="district forename geo listOrg listPerson listPlace location org orgName persName person place placeName region settlement surname terrain"/>
           
           <classRef key="att.global.linking"/>
           
           <classSpec type="atts" module="tei" ident="att.global" mode="change">
             <attList>
               <attDef ident="xml:base" mode="delete"/>
               <attDef ident="xml:space" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec type="atts" module="tei" ident="att.global.responsibility" mode="delete"/>
           <classSpec type="atts" module="tei" ident="att.ranging" mode="delete"/>
           <classSpec type="atts" module="tei" ident="att.editLike" mode="delete"/>
           <classSpec type="atts" module="tei" ident="att.dimensions" mode="delete"/>
           <classSpec type="atts" module="tei" ident="att.global.facs" mode="delete"/>
           <classSpec type="atts" module="tei" ident="att.global.analytic" mode="delete"/>
           
           <classSpec type="atts" module="tei" ident="att.global.linking" mode="change">
             <attList>
               <attDef ident="synch" mode="delete"/>
               <attDef ident="sameAs" mode="delete"/>
               <attDef ident="copyOf" mode="delete"/>
               <attDef ident="next" mode="delete"/>
               <attDef ident="prev" mode="delete"/>
               <attDef ident="exclude" mode="delete"/>
               <attDef ident="select" mode="delete"/>
             </attList>
           </classSpec>
           
           <classSpec type="atts" module="tei" ident="att.global.rendition" mode="change">
             <attList>
               <attDef ident="rend" mode="delete"/>
             </attList>
           </classSpec>
           
           <elementSpec ident="location" mode="change">
             <content>
               <elementRef key="geo" minOccurs="1" maxOccurs="1"/>
             </content>
             <constraintSpec ident="onlyLineStringsAreDirectional" scheme="schematron">
               <constraint>
                 <sch:rule context="tei:location">
                   <sch:assert test="not(@subtype = 'directional') or matches(child::tei:geo, '[^i]LineString')">
                     Only a LineString can be specified as directional.
                   </sch:assert>
                 </sch:rule>
               </constraint>
             </constraintSpec>
             <constraintSpec ident="ifWhenIsoThenNotFromIsoOrToIso" scheme="schematron">
               <constraint>
                 <sch:rule context="tei:location">
                   <sch:assert test="not(@when-iso) or not(@from-iso or @to-iso)">
                     You can either use @when-iso for a single point in time, or
                     @from-iso and/or @to-iso to delimit a time range, but you can't 
                     combine @when-iso with @from-iso or @to-iso.
                   </sch:assert>
                 </sch:rule>
               </constraint>
             </constraintSpec>
             <attList>
               <attDef ident="type" mode="change" usage="req">
                 <valList mode="add" type="closed">
                   <valItem ident="GeoJSON">
                     <gloss>A complete GeoJSON geometry object.</gloss>
                     <desc>The child <gi>geo</gi> element contains a complete GeoJSON geometry object 
                       conforming with the 
                       <ref target="https://tools.ietf.org/html/rfc7946#section-3.1">GeoJSON specification</ref>. </desc>
                   </valItem>
                 </valList>
               </attDef>
               <attDef ident="subtype" mode="change" usage="opt">
                 <valList type="closed" mode="add">
                   <valItem ident="directional">
                     <gloss>Directional LineString (representing movement)</gloss>
                     <desc>A location whose geometry is a LineString may be characterized
                     as directional, signifying that it represents a journey or movement.</desc>
                   </valItem>
                 </valList>
               </attDef>
               <attDef ident="from-iso" mode="change">
                 <datatype>
                   <dataRef name="token" 
                     restriction=
                     "\d\d\d\d(-\d\d(-\d\d(T\d\d(:\d\d(:\d\d)?)?)?)?)?(/\d\d\d\d(-\d\d(-\d\d(T\d\d(:\d\d(:\d\d)?)?)?)?)?)?"/>
                 </datatype>
               </attDef>
               <attDef ident="when-iso" mode="change">
                 <datatype>
                   <dataRef name="token" 
                     restriction=
                     "\d\d\d\d(-\d\d(-\d\d(T\d\d(:\d\d(:\d\d)?)?)?)?)?(/\d\d\d\d(-\d\d(-\d\d(T\d\d(:\d\d(:\d\d)?)?)?)?)?)?"/>
                 </datatype>
               </attDef>
               <attDef ident="to-iso" mode="change">
                 <datatype>
                   <dataRef name="token" 
                     restriction=
                     "\d\d\d\d(-\d\d(-\d\d(T\d\d(:\d\d(:\d\d)?)?)?)?)?(/\d\d\d\d(-\d\d(-\d\d(T\d\d(:\d\d(:\d\d)?)?)?)?)?)?"/>
                 </datatype>
               </attDef>
             </attList>
           </elementSpec>
           
           <elementSpec ident="classDecl" mode="change">
             <content>
               <elementRef key="taxonomy" minOccurs="1" maxOccurs="unbounded"/>
             </content>
           </elementSpec>
           
           <elementSpec ident="taxonomy" mode="change">
             <content>
               <elementRef key="category" minOccurs="1" maxOccurs="unbounded"/>
             </content>
             <attList>
               <attDef ident="n" mode="change" usage="req">
                 <gloss>A name or caption for this taxonomy</gloss>
                 <desc>Each taxonomy in your header must have a caption designated
                       in its @n attribute. This allows the map interface to
                       provide users with a choice of different sets of categories
                       to display in the even that you have multiple embedded 
                       taxonomies.
                 </desc>
               </attDef>
             </attList>
           </elementSpec>
           
           <elementSpec ident="encodingDesc" mode="change">
             <content>
               <elementRef key="classDecl"/>
             </content>
           </elementSpec>
           
           <elementSpec ident="teiHeader" mode="change">
             <content>
               <elementRef key="fileDesc"/>
               <elementRef key="encodingDesc"/>
             </content>
           </elementSpec>
           
           <elementSpec ident="body" mode="change">
             <content>
               <elementRef key="head"/>
               <elementRef key="div"/>
             </content>
           </elementSpec>
           
           <elementSpec ident="div" mode="change">
             <content>
               <elementRef key="listPlace"/>
             </content>
           </elementSpec>
           
           <elementSpec ident="listPlace" mode="change">
             <content>
               <elementRef key="place" minOccurs="1" maxOccurs="unbounded"/>
             </content>
           </elementSpec>
           
           <elementSpec ident="place" mode="change">
             <content>
               <sequence>
                <elementRef key="placeName" minOccurs="1" maxOccurs="unbounded"/>
                <elementRef key="desc"/>
                <elementRef key="desc" minOccurs="0" maxOccurs="1"/>
                <elementRef key="location"/>
               </sequence>
             </content>
             <attList>
               <attDef ident="xml:id" mode="change" usage="req"/>
               <attDef ident="corresp" mode="change" usage="req"/>
             </attList>
           </elementSpec>
           
           <elementSpec ident="desc" mode="change">
             <content>
               <alternate>
                 <macroRef key="macro.phraseSeq"/>
                 <elementRef key="list" maxOccurs="1"/>
                 <elementRef key="p" minOccurs="0" maxOccurs="unbounded"/>
               </alternate>
             </content>
           </elementSpec>
           
           <elementSpec ident="item" mode="change">
             <content>
               <alternate>
                 <elementRef key="ptr"/>
                 <elementRef key="graphic"/>
                 <elementRef key="ref"/>
               </alternate>
             </content>
           </elementSpec>
           
      </schemaSpec></div>
      </back>
  </text>
</TEI>
